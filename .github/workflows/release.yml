# This workflow is main release, needs to be manually tagged & pushed.
on:
  workflow_dispatch:
#   push:
#     paths-ignore:
#       - "documentation/**"
    # tags:
    #   - "v1.*"

name: Release

# Permissions needed for AWS OIDC authentication in called workflows
permissions:
  id-token: write   # Required for AWS OIDC authentication in called workflow
  contents: write   # Required for creating releases and by actions/checkout
  actions: read     # May be needed for some workflows

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # ------------------------------------
  # 0) Compute version tag from Cargo.toml
  # ------------------------------------
  meta:
    name: Compute tag
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.set_tag.outputs.tag }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # pin@v4
      - id: set_tag
        shell: bash
        run: |
          set -euo pipefail
          ver=$(awk '/^\[workspace.package\]/{f=1;next} /^\[/{f=0} f && /^version =/{gsub(/\"/,"",$3); print $3; exit}' Cargo.toml)
          if [ -z "${ver}" ]; then
            # Fallback to first version line
            ver=$(sed -n 's/^version = "\(.*\)"/\1/p' Cargo.toml | head -n1)
          fi
          if [ -z "${ver}" ]; then
            echo "Failed to extract version from Cargo.toml" >&2
            exit 1
          fi
          echo "Resolved version: ${ver}"
          echo "tag=v${ver}" >> "$GITHUB_OUTPUT"
  # ------------------------------------
  # 1) Build CLI for multiple OS/Arch
  # ------------------------------------
  build-cli:
    uses: ./.github/workflows/build-cli.yml
    needs: [meta]
    with:
      version: ${{ needs.meta.outputs.tag }}
      ref: ${{ needs.meta.outputs.tag }}

  # ------------------------------------
  # 2) Upload Install CLI Script
  # ------------------------------------
  install-script:
    name: Upload Install Script
    runs-on: ubuntu-latest
    needs: [build-cli]
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # pin@v4
      - uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # pin@v4
        with:
          name: download_cli.sh
          path: download_cli.sh

  # ------------------------------------------------------------
  # 3) Bundle Desktop App (macOS)
  # ------------------------------------------------------------
  # bundle-desktop:
  #   uses: ./.github/workflows/bundle-desktop.yml
  #   permissions:
  #     id-token: write
  #     contents: read
  #   with:
  #     signing: true
  #   secrets:
  #     OSX_CODESIGN_ROLE: ${{ secrets.OSX_CODESIGN_ROLE }}

  # ------------------------------------------------------------
  # 4) Bundle Desktop App (macOS)
  # ------------------------------------------------------------
  # bundle-desktop-intel:
  #   uses: ./.github/workflows/bundle-desktop-intel.yml
  #   permissions:
  #     id-token: write
  #     contents: read
  #   with:
  #     signing: true
  #   secrets:
  #     OSX_CODESIGN_ROLE: ${{ secrets.OSX_CODESIGN_ROLE }}

  # ------------------------------------------------------------
  # 5) Bundle Desktop App (Linux)
  # ------------------------------------------------------------
  # bundle-desktop-linux:
  #   uses: ./.github/workflows/bundle-desktop-linux.yml

#  # ------------------------------------------------------------
#  # 6) Bundle Desktop App (Windows)
#  # ------------------------------------------------------------
  # bundle-desktop-windows:
  #   uses: ./.github/workflows/bundle-desktop-windows.yml
  #   with:
  #     signing: true
  #   secrets:
  #     WINDOWS_CODESIGN_CERTIFICATE: ${{ secrets.WINDOWS_CODESIGN_CERTIFICATE }}
  #     WINDOW_SIGNING_ROLE: ${{ secrets.WINDOW_SIGNING_ROLE }}
  #     WINDOW_SIGNING_ROLE_TAG: ${{ secrets.WINDOW_SIGNING_ROLE_TAG }}

  # ------------------------------------
  # 7) Create/Update GitHub Release
  # ------------------------------------
  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [
      build-cli,
      meta,
      # install-script,
      # bundle-desktop,
      # bundle-desktop-intel,
      # bundle-desktop-linux,
      # bundle-desktop-windows
    ]
    permissions:
      contents: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@cc203385981b70ca67e1cc392babf9cc229d5806 # pin@v4
        with:
          merge-multiple: true

      # Create/update the stable release
      - name: Release stable
        uses: ncipollo/release-action@440c8c1cb0ed28b9f43e4d1d670870f059653174 # pin@v1
        with:
          tag: stable
          name: Stable
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: |
            goose-*.tar.bz2
            goose-*.zip
            Goose*.zip
            *.deb
            *.rpm
            download_cli.sh
          allowUpdates: true
          omitBody: true
          omitPrereleaseDuringUpdate: true

      # Create/update the versioned release
      - name: Release versioned
        uses: ncipollo/release-action@440c8c1cb0ed28b9f43e4d1d670870f059653174 # pin@v1
        with:
          tag: ${{ needs.meta.outputs.tag }}
          commitish: ${{ github.sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: |
            goose-*.tar.bz2
            goose-*.zip
            Goose*.zip
            *.deb
            *.rpm
            download_cli.sh
          allowUpdates: true
          omitBody: true
          omitPrereleaseDuringUpdate: true
